{"version":3,"sources":["components/Container.js","screens/Navbar.js","components/Flex.js","screens/Footer.js","components/Parallax.js","screens/Home.js","screens/Content.js","App.js","serviceWorker.js","index.js","assets/images/mountain.jpg","assets/images/header-animation.gif","assets/images/logo.png"],"names":["Container","styled","div","fontSize","lineHeight","color","NavbarContainer","height","backgroundColor","display","position","top","width","alignItems","NavTitle","span","padding","fontFamily","fontWeight","NavMenuContainer","alignSelf","flex","marginRight","justifyContent","NavItem","NavLink","isActive","outline","textDecoration","cursor","Navbar","to","exact","Flex","FooterContainer","backgroundAttachment","backgroundImage","FooterBackground","backgroundRepeat","backgroundSize","LeftContent","margin","flexDirection","RightContent","Footer","Parallax","background","fadeInAnimation","keyframes","fadeIn","HeaderContainer","animation","Logo","img","QuoteContainer","Home","in","HeaderBackground","alt","src","LogoImage","ContentContainer","minHeight","marginTop","Something","children","Team","style","Content","path","component","App","basename","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.d4f0ac2e.chunk.js","sourcesContent":["import styled from '@emotion/styled'\n\nconst Container = styled.div({\n    fontSize: '15px',\n    lineHeight: '1.4',\n    color: '#696969'\n})\n\nexport default Container","import React from 'react'\nimport styled from '@emotion/styled'\nimport Container from '../components/Container'\nimport { NavLink } from \"react-router-dom\"\n\nconst NavbarContainer = styled(Container)({\n    height: 60,\n    backgroundColor: '#000',\n    display: 'flex',\n    position: 'fixed',\n    top: 0,\n    width: '100%',\n    alignItems: 'center'\n})\n\nconst NavTitle = styled.span({\n    padding: '0 30px',\n    color: '#fff',\n    fontFamily: 'Tahoma',\n    fontSize: 24,\n    fontWeight: 'bold',\n    width: 40,\n})\n\nconst NavMenuContainer = styled.div({\n    alignSelf: 'center',\n    height: '100%',\n    display: 'flex',\n    flex: 1,\n    marginRight: 70,\n    '::hover': {\n        color: 'green'\n    },\n    justifyContent: 'center'\n})\n\nconst NavItem = styled(NavLink)(({ isActive }) => ({\n    alignItems: 'center',\n    backgroundColor: isActive ? '#f53b57' : 'inherit',\n    color: '#fff',\n    display: 'flex',\n    fontFamily: 'Arial',\n    height: '100%',\n    justifyContent: 'center',\n    outline: 'none',\n    fontWeight: 'bold',\n    textDecoration: 'none',\n    padding: '0 10px',\n    width: 100,\n    ':hover': {\n        backgroundColor: '#f53b57',\n        cursor: 'pointer'\n    },\n    '&.active': {\n        backgroundColor: '#f53b57'\n    }\n}))\n\nconst Navbar = () => {\n    return (\n        <NavbarContainer>\n            <NavTitle>\n                Newget\n            </NavTitle>\n            <NavMenuContainer>\n                <NavItem to='/' exact>\n                    HOME\n                </NavItem>\n                <NavItem to='/about' exact>\n                    ABOUT\n                </NavItem>\n                <NavItem to='/projects' exact>\n                    PROJECTS\n                </NavItem>\n                <NavItem to='/team' exact>\n                    TEAM\n                </NavItem>\n                <NavItem to='/contact' exact>\n                    CONTACT\n                </NavItem>\n            </NavMenuContainer>\n        </NavbarContainer>\n    )\n}\n\nexport default Navbar","import styled from '@emotion/styled'\n\nconst Flex = styled.div({\n    display: 'flex',\n    flex: 1\n})\n\nexport default Flex","import React from 'react'\nimport Flex from '../components/Flex'\nimport Container from '../components/Container'\nimport styled from '@emotion/styled'\nimport FooterBackground from '../assets/images/mountain.jpg'\n\nconst FooterContainer = styled(Container)({\n    backgroundAttachment: 'fixed',\n    backgroundImage: `url('${FooterBackground}')`,\n    backgroundRepeat: 'no-repeat',\n    backgroundSize: '100% 100%',\n    backgroundColor: 'rgba(0, 0, 0, 0.8)',\n    color: '#fff',\n    display: 'flex',\n    height: 'calc(100vh)',\n    padding: 0,\n    width: '100%'\n})\n\nconst LeftContent = styled(Flex)({\n    margin: '0 10px',\n    flexDirection: 'column-reverse'\n})\n\nconst RightContent = styled(Flex)({\n    margin: '0 10px',\n    flexDirection: 'column-reverse',\n    alignItems: 'flex-end'\n})\n\nconst Footer = () => (\n    <FooterContainer>\n        <LeftContent>\n            Started developing this website on January 19, 2020 1:25 AM GMT+8 | \n            Last updated this website on January 22, 2020 5:30 PM GMT+8 \n        </LeftContent>\n        <RightContent>\n            &copy; All rights reserve to German Manalili\n        </RightContent>\n    </FooterContainer>\n)\n\nexport default Footer","import styled from '@emotion/styled'\n\nconst Parallax = styled.div(({ background, height, backgroundSize }) => ({\n    backgroundImage: `url('${background}')`,\n    height: height ? height : 'calc(100vh - 60px)',\n    width: '100%',\n    backgroundAttachment: 'fixed',\n    backgroundRepeat: 'no-repeat',\n    backgroundSize: backgroundSize ?  backgroundSize : '100% 100%'\n}))\n\nexport default Parallax","import React from 'react'\nimport HeaderBackground from '../assets/images/header-animation.gif'\nimport Parallax from '../components/Parallax'\nimport Flex from '../components/Flex'\nimport styled from '@emotion/styled'\nimport { keyframes } from '@emotion/core'\nimport { fadeIn } from 'react-animations'\nimport LogoImage from '../assets/images/logo.png'\n\nconst fadeInAnimation = keyframes`${fadeIn}`;\n\nconst HeaderContainer = styled(Flex)({\n    animation: `1s ${fadeInAnimation}`,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: 'rgba(0,0,0,0.6)',\n    flexDirection: 'column',\n    height: '100%'\n})\n\nconst Logo = styled.img({\n    display: 'flex',\n    height: 200,\n    width: 220\n})\n\nconst QuoteContainer = styled.span({\n    fontFamily: 'Arial',\n    fontSize: 32,\n    fontWeight: 'bold',\n    color: 'white'\n})\n\nconst Home = ({ in: inProp }) => (\n    <Parallax background={HeaderBackground} >\n        <HeaderContainer>\n            <Logo alt='logo' src={LogoImage} />\n            <QuoteContainer>\n                {'success = { workHard(x) for x in life x != finish }'}\n            </QuoteContainer>\n        </HeaderContainer>\n    </Parallax>\n)\n\nexport default Home","import React from 'react'\nimport styled from '@emotion/styled'\nimport Container from '../components/Container'\nimport Home from '../screens/Home'\n\nimport {\n    Switch,\n    Route\n} from \"react-router-dom\";\n\n\nconst ContentContainer = styled(Container)({\n    minHeight: 'calc(100vh - 60px)',\n    flex: 1,\n    marginTop: 60\n})\n\n\nconst Something = ({ children }) => (\n    <div>\n        TESTING\n    </div>\n)\n\nconst Team = () => (\n    <div style={{ padding: 25 }}>\n        <p>German Manalili - Project Manager</p>\n        <p>Wil Costillas - Senior Backend Developer</p>\n        <p>Nahid Abdulmalik - Senior Frontend Developer</p>\n        <p>Ronald Gipa - Junior Frontend Developer</p>\n        <p>Joyce Mauricio - Junior Ftonend Developer</p>\n        <p>Jan Myckel Perez - Junior Frontend Developer</p>\n        <p>Jay Maico - Junior Frontend Developer</p>\n        <p>Gautama Gonzales - Designer</p>\n    </div>\n)\n\nconst Content = () => (\n    <ContentContainer>\n        <Switch>\n            <Route path=\"/about\" component={Something} />\n            <Route path=\"/projects\" component={Something} />\n            <Route path=\"/team\" component={Team} />\n            <Route path=\"/contact\" component={Something} />\n            <Route path=\"/\" component={Home} />\n        </Switch>\n    </ContentContainer>\n)\n\nexport default Content","import React from 'react'\nimport Container from './components/Container'\nimport Navbar from './screens/Navbar'\nimport Footer from './screens/Footer'\nimport Content from './screens/Content'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport { BrowserView, MobileView } from \"react-device-detect\"\n\nconst App = () => {\n  return (\n    <Router basename='/portfolio'>\n      <Container>\n        <BrowserView>\n          <Navbar />\n          <Content />\n          <br/><br/><br/><br/><br/><br/>\n          <br/><br/><br/><br/><br/><br/>\n          <br/><br/><br/><br/><br/><br/>\n          <br/><br/><br/><br/><br/><br/>\n          <br/><br/><br/><br/><br/><br/>\n          <br/><br/><br/><br/><br/><br/>\n          <br/><br/><br/><br/><br/><br/>\n          <br/><br/><br/><br/><br/><br/>\n          <br/><br/><br/><br/><br/><br/>\n          <br/><br/><br/><br/><br/><br/>\n          <Footer />\n        </BrowserView>\n        <MobileView>\n          <h1>I have not yet implemented mobile support for this site please use a computer or change to desktop mode.</h1>\n        </MobileView>\n      </Container>\n    </Router>\n  );\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/mountain.c3bb0378.jpg\";","module.exports = __webpack_public_path__ + \"static/media/header-animation.9ab39bd0.gif\";","module.exports = __webpack_public_path__ + \"static/media/logo.cc29801c.png\";"],"sourceRoot":""}